#!/usr/bin/env python

import binascii
import hashlib

from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA

pub_key_encrypted_key = "3cf903522e1a3966805b50e7f7dd51dc7969c73cfb1663a75a56ebf4aa4a1849d1949005437dc44b8464dca05680d531b7a971672d87b24b7a6d672d1d811e6c34f42b2f8d7f2b43aab698b537d2df2f401c2a09fbe24c5833d2c5861139c4b4d3147abb55e671d0cac709d1cfe86860b6417bf019789950d0bf8d83218a56e69309a2bb17dcede7abfffd065ee0491b379be44029ca4321e60407d44e6e381691dae5e551cb2354727ac257d977722188a946c75a295e714b668109d75c00100b94861678ea16f8b79b756e45776d29268af1720bc49995217d814ffd1e4b6edce9ee57976f9ab398f9a8479cf911d7d47681a77152563906a2c29c6d12f971"

raw_encrypted_key = binascii.unhexlify(pub_key_encrypted_key)

rsa_key = RSA.importKey(open('../../artifacts/obj9/server.key', "rb").read())
cipher = PKCS1_OAEP.new(rsa_key)

decrypted_key = cipher.decrypt(raw_encrypted_key)
hex_key = binascii.hexlify(decrypted_key)

# Check the SHA1 hash
sha1_target = "b0e59a5e0f00968856f22cff2d6226697535da5b"
sha1_result = hashlib.sha1(hex_key).hexdigest()

if sha1_result == sha1_target:
    print "Found the key!", binascii.hexlify(decrypted_key)
else:
    print "Key SHA1 hash doesn't match..."
    print "Target:", sha1_target, "ours:", sha1_result
